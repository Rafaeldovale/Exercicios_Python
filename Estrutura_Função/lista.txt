1 - Escreva um script que pergunta ao usuário se ele deseja converter uma temperatura de grau Celsius para Farenheit ou vice-versa. 
Para cada opção, crie uma função. Crie uma terceira, que é um menu para o usuário escolher a opção desejada, onde esse menu chama 
a função de conversão correta.


2 - Faça um programa, com uma função que necessite de três argumentos, e que forneça a soma desses três argumentos através de uma 
função. Seu script também deve fornecer a média dos três números, através de uma segunda função que chama a primeira.


3 - Faça um programa que recebe três números do usuário, e identifica o maior através de uma função e o menor número através 
de outra função.


4 - A probabilidade de dar um valor em um dado é 1/6 (uma em 6). Faça um script em Python que simule 1 milhão de lançamentos de 
dados e mostre a frequência que deu para cada número.


5 - A série de Fibonacci é uma sequência de números, cujos dois primeiros são 0 e 1. O termo seguinte da sequência é obtido 
somando os dois anteriores. Faça uma script em Python que solicite um inteiro positivo ao usuário, n. Então uma função exibe 
todos os termos da sequência até o n-ésimo termo. Use recursividade.


6 - Crie uma função que recebe um inteiro positivo e teste para saber se ele é primo ou não. Faça um script que recebe um 
inteiro n e mostra todos os primos, de 1 até n.


7 - Um número é dito perfeito quando ele é igual a soma de seus fatores. Por exemplo, os fatores de 6 são 1, 2 e 3 (ou seja, 
podemos dividir 6 por 1, por 2 e por 3) e 6=1+2+3, logo 6 é um número perfeito. Escreva uma função que recebe um inteiro e 
dizer se é perfeito ou não. Em outra função, peça um inteiro n e mostre todos os números perfeitos até n.


8 - Faça um programa para imprimir:
    1
    2   2
    3   3   3
    .....
    n   n   n   n   n   n  ... n
para um n informado pelo usuário. Use uma função que receba um valor n inteiro e imprima até a n-ésima linha.


9 - Faça um programa para imprimir:
    1
    1   2
    1   2   3
    .....
    1   2   3   ...  n
para um n informado pelo usuário. Use uma função que receba um valor n inteiro imprima até a n-ésima linha.


10 - Faça um programa, com uma função que necessite de um argumento. A função retorna o valor de caractere ‘P’, se seu argumento 
for positivo, e ‘N’, se seu argumento for zero ou negativo.

11 - Faça um programa com uma função chamada somaImposto. A função possui dois parâmetros formais: taxaImposto, que é a quantia 
de imposto sobre vendas expressa em porcentagem e custo, que é o custo de um item antes do imposto. A função “altera” o valor de 
custo para incluir o imposto sobre vendas.


12 - Faça um programa que converta da notação de 24 horas para a notação de 12 horas. Por exemplo, o programa deve converter 
14:25 em 2:25 P.M. A entrada é dada em dois inteiros. Deve haver pelo menos duas funções: uma para fazer a conversão e uma para a 
saída. Registre a informação A.M./P.M. como um valor ‘A’ para A.M. e ‘P’ para P.M. Assim, a função para efetuar as conversões 
terá um parâmetro formal para registrar se é A.M. ou P.M. Inclua um loop que permita que o usuário repita esse cálculo para 
novos valores de entrada todas as vezes que desejar.

13 - Faça uma função que informe a quantidade de dígitos de um determinado número inteiro informado.

14 - Exercicio: calculadora Simples com funções

    objetivo: Criar uma calculadora simples que pode realizar quatro operações básicas: adição, subtração, multiplicação e divisão.

    O usuário deverá fornecer dois números e a operação desejada. A solução deve ser implementada usando funções.

    Instruções:

        Defina quatro funções: adicionar(), subtrair(), multiplicadr() e dividir().

        - Cada função deve aceitar dois parâmetros (núemros) e retornar o resultado da operação correspondente.
        - Peça ao usuário para inserir dois núemros.
        - Peça ao usuário para escolhera uma das quatros operações (por exemplo, ele pode digitar "adicionar", para adição)
        - Com base na escolha do usuário, chame a função correspondente e impria o resultado

15 - Exercício: Fábrica de funções de Operações Matemáticas
    Imagine que você estpa construindo uma calculadora. Porém, ao invés de implementar cada operação matemática(soma, subtração,
    multiplicação e divisão) diretamente, você decide criar uma "fabrica de funções". Esta fábrica, quando fornecida com o nome de 
    uma operação, deve retornar uma funcção que realiza a operação desejada.

    Instruções:

        - Escreva uma função chamada fábrica_de_operações que acreite uma string: 'soma', 'subtracao', 'multiplicação' ou divisao'.

        - Dependendo do argumento fornecido, sua função deve retornar uma das operações matemáticas. Por exemplo, se o argumento for
        'soma', a função retonada deve ser capaz de somar dois números.

        - Se a operação não for reconhecida, retorne uma função que imprima "Opera não suportada"

16 - Adapte a fábrica para aceitar operações com mais de dois numeros. Por exemplo, a operação de soma deve ser capaz de somar três,
quatro ou mais números de uma só vez.
Dica: Utilize argumentos variáveis (*args) para essa adaptação